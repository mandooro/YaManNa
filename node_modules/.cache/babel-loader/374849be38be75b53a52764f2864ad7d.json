{"ast":null,"code":"var _jsxFileName = \"/Users/hnee/YaManNa/src/Main.js\";\nimport React from 'react';\nimport { fire, getFireDB } from './shared/firebase.template.js';\nimport './Main.scss';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/styles';\nconst styles = {\n  root: {\n    flexGrow: 1,\n    backgroundColor: 'purple',\n    color: 'white',\n    width: '100%',\n    height: '100%'\n  },\n  paper: {\n    textAlign: 'center',\n    backgroundColor: 'purple'\n  }\n};\n\nclass Main extends React.Component {\n  constructor() {\n    super();\n    fire();\n  }\n\n  componentDidMount() {\n    const goSpotPage = (lat, lon) => {\n      getFireDB().ref().push({\n        master: {\n          lat: lat,\n          lon: lon\n        }\n      }).then(result => {\n        const key = result.key;\n        window.localStorage.setItem(key, \"master\");\n        const history = this.props.history;\n        history.push('/spot/' + key);\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    if (navigator.geolocation) {\n      // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n      navigator.geolocation.getCurrentPosition(function (position) {\n        const lat = position.coords.latitude; // 위도\n\n        const lon = position.coords.longitude; // 경도\n\n        goSpotPage(lat, lon);\n      }, function error(err) {\n        console.warn('ERROR(' + err.code + '): ' + err.message);\n      });\n    } else {\n      // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\n      // 일단 카카오 본사로 찍고 스팟 보냄\n      goSpotPage(33.450701, 126.570667);\n    }\n  }\n\n  render() {\n    // TODO 디자인 필요\n    return React.createElement(Container, {\n      fixed: true,\n      className: this.props.classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: this.props.classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: this.props.classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"\\uC900\\uBE44 \\uC911\\uC785\\uB2C8\\uB2E4\"))))));\n  }\n\n}\n\nexport default withStyles(styles)(Main);","map":{"version":3,"sources":["/Users/hnee/YaManNa/src/Main.js"],"names":["React","fire","getFireDB","Container","CircularProgress","Paper","Grid","withStyles","styles","root","flexGrow","backgroundColor","color","width","height","paper","textAlign","Main","Component","constructor","componentDidMount","goSpotPage","lat","lon","ref","push","master","then","result","key","window","localStorage","setItem","history","props","catch","e","console","log","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","err","warn","code","message","render","classes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { fire,getFireDB } from './shared/firebase.template.js'\nimport './Main.scss'\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/styles';\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n        backgroundColor: 'purple',\n        color: 'white',\n        width: '100%',\n        height: '100%',\n    },\n    paper: {\n        textAlign: 'center',\n        backgroundColor: 'purple',\n    }\n};\n\nclass Main extends React.Component {\n\n    constructor() {\n        super();\n        fire();\n    }\n\n    componentDidMount() {\n\n        const goSpotPage = (lat,lon) => {\n            getFireDB().ref().push({master:{lat:lat, lon:lon}})\n                .then(result => {\n                    const key = result.key\n                    window.localStorage.setItem(key,\"master\")\n                    const history = this.props.history;\n                    history.push('/spot/'+key);\n                })\n                .catch(e => {\n                    console.log(e)\n                })\n        }\n\n        if (navigator.geolocation) {\n            // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n            navigator.geolocation.getCurrentPosition(\n                function(position) {\n                    const lat = position.coords.latitude; // 위도\n                    const lon = position.coords.longitude; // 경도\n                    goSpotPage(lat,lon)\n                },\n                function error(err) {\n                    console.warn('ERROR(' + err.code + '): ' + err.message);\n                }\n            );\n\n        } else { // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\n            // 일단 카카오 본사로 찍고 스팟 보냄\n            goSpotPage(33.450701, 126.570667)\n        }\n    }\n\n    render() {\n        // TODO 디자인 필요\n        return (\n                <Container fixed className={this.props.classes.root}>\n                    <div>\n                        <Grid container spacing={3}>\n                            <Grid item xs={12}>\n                                <Paper className={this.props.classes.paper}>\n                                    <CircularProgress color=\"primary\" />\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={3}>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Paper className={this.props.classes.paper}>\n                                    <div>준비 중입니다</div>\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </Container>\n        );\n    }\n}\n\nexport default withStyles(styles)(Main);\n"]},"metadata":{},"sourceType":"module"}